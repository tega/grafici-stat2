#Pagina 31
5+7*3
(5+7)*3
2*3^2
(2*3)^2
x <- 2
x
print(x)
rm(x)
objects()
3 -> z
z

# Pagina 32

seq (1,5,1)
seq (1996, 2003,1)
seq (1, 0, -0.2)
a <- seq(5)
a
b <- 1:5
b
0:5/10
nome.cognome <- c("Claudio","Ortelli")
nome.cognome
c(1,2.5,"nome")
x <- c(2,3,-1)
x^2


# Pagina 33
rep(1,5)
rep(x,2)
x
rep(x,c(3,2,1))
b <- 1:4
a <- 2*(0:3)
z <- (a^2 - b^2)^2 / (a^2 + b^2)
z
x <- 1:3*10
x


# Pagina 34
x[1] #accesso al primo elemento
x[2] #accesso al secondo elemento
x[3] #accesso al terzo elemento
x[4] #accesso al quarto elemento
x[rep(1,5)]
x[c(1,3)]
x[-1] #non voglio il primo elemento
x[-c(1,3)] #non voglio il primo & il terzo elemento
5 >=4
5!=1
x <- 1:3


# Pagina 35
x < 3
y <- 3:1
y
x<y
1:10 >= 7
sum(1:10 >= 7)
nome <- c("Claudio", "Maria", "Marco", "Matteo", "Francesca",
altezza <- 140:148
peso <- c(seq(50, 64, 2),59)
nome[peso>60]
altezza[peso>60]
nome[peso>60 & peso != 64]

# Pagina 36
tabella <- data.frame(nome,altezza,peso)
tabella
dati <- read.table("//usi/dfs/istituti/Documents/ortellic/My Documents/R/daticorso.csv", header=TRUE, 
                   sep=",",colClasses=c("character",rep("numeric",6)))


# Pagina 37
dati[1,]
dati[c(1,3,1141),1:3]
dati[c(1,3,1141),-(2:5)]
dim(dati)
caso <- rnorm(5)


# Pagina 38
dati.test
names(dati.test) <- c("Data","S&P100","MIB","Simulazione")
names(dati.test) [c(2,4)] <- c("S&P","Sim")
row.names(dati.test) [1:3] <- c("uno","due","tre")
dati.test
dati.test["uno","MIB"]
dati.test$MIB
attach(dati.test)
MIB


# Pagina 39
matrix(1:6,nrow=3)
matrix(1:2,nrow=3,ncol=4)
serie <- as.matrix(dati[,2:7])
dim(serie)


# Pagina 40
indice.riga <- paste("riga",1:1141,sep="")
dimnames(serie)[[1]] <- indice.riga
serie[1:3,1:2]
serie["riga14",]
A <- matrix(1:4, nrow=2,ncol=2)
B <- matrix(4, nrow=2,ncol=2)
A-B
exp(matrix(c(1,0,0,1),nrow=2))
solve (A-B)
solve(A-B) %*% (A-B)


# Pagina 41
A
col3 <- c(5,6)
cbind(A,col3)
A
apply(A,1,sum)
apply(A,2,mean)


# Pagina 42
returns <- (serie[2:1141,]-serie[1:1140,])/serie[1:1140,]
r <- log(serie[2:1141,]/serie[1:1140,])
r <- apply(log(serie[1:1141,]),2,diff)
apply(r==0,2,sum)
mia.lista <- list(matrix(1:6,nrow=2),c("Nome","Cognome"), dati)
is.list(mia.lista)
mia.lista [[1]]
mia.lista [[1]][2,]


# Pagina 43
mia.lista$b
mia.lista$A[2,]
length(mia.lista)
mia.lista[[4]]
mia.lista$ultimo <- "Ultimo elemento"
mia.lista$ultimo
mia.lista[[4]] <- NULL
mia.lista[[4]]



# Pagina 44

#creazione di un vettore contenente i nomi delle serie
nomi <- dimnames(r) [[2]]
i <- 1
#plot della prima serie di returns
plot (r[,i],
type="l",
main= paste("Log returns di",nomi[i]),
sub=paste("Media:",
format(mean(r[,i]),digits=2)),
xlab="Osservazione",
ylab=nomi[i])
i <- 1; j <- 2
plot (r[,i],r[,j],
main = paste (nomi[i], "vs", nomi[j]),
xlab=nomi[i],
ylab=nomi[j],
col="blue")
abline(a=0,b=1)
abline(h=c(0.01,0.02,0.03))
arrows(-0.06,0,-0.04,0.05)
arrows(-0.04,0.05,"Guarda che bel grafico")

# Pagina 45
pairs(r[,1:4])
i <- 1
hist (r[,i],
probability=TRUE,
main=paste("Istogramma di",nomi[i]),
xlab=nomi[i],
breaks=17)
qqnorm(r[,i],main=paste("Normal Q-Q Plot per",nomi[i]),
xlab="Quantili teorici",ylab="Quantili empirici")
qqline(r[,i])
i <- 1; j <- 2
qqplot(r[,i],r[,j],main=paste("Q-Q Plot fra",nomi[i],"e",nomi[j]),
xlab=nomi[i],ylab=nomi[j])
acf(r[,i],lag.max=10,type="correlation",main=nomi[i])
i <- 2
j <- 3
ccf(r[,i],r[,j],lag.max=10, type="correlation", main=
paste("Correlazione dei returns di ",nomi[i],"e",nomi[j],
sep=" "))


# Pagina 46
postscript("foo.ps",paper="a4",width=5,height=4,bg="yellow")
plot(r[,6],main=paste("Log-returns di ",nomi[6],sep=""),
type="l",xlab="Osservazioni",ylab=nomi[6])
dev.off()
if (rnorm(1) > 0) print ("Maggiore di 0") else print ("Minore o
uguale a 0")
if (rnorm(1)>0) {
plot (rnorm(10),main="Normale")
print ("Terminato")
} else {
plot (rt(10,df=6),main="t-6")
print ("Terminato")
}


# Pagina 47
for (nome in nomi) print (nome)

for (indice in 1:10) {
x <- rnorm(1000)
if (exists("media")) {
media <- c(media,mean(x))
} else {
media <- mean(x)
}
if (exists("varianza")) {
varianza <- c(varianza,var(x))
} else {
varianza <- var(x)
}
}
for (i in 1:10) {
if (i > 5) break
print (i)
}


# Pagina 48
i <- 1
while (i <= 5) {
print (i)
i <- i + 1
}

i <- 1
repeat {
print (i)
i <- i + 1
if (i > 5) break
}

x <- rnorm(10)
for (i in 1:10) {
if (x[i] <0 ) next
print (sqrt(x[i]))
}
x <- rnorm(10)
sqrt(x[x>0])


# Pagina 49
cubo <- function (x=10) { return(x^3) }
cubo(4)
y <- cubo(4)
y



# Pagina 50
cubo <- function (x) { if (missing(x))
print("Argomento non specificato") else return(i^3) }
cubo()
potenza <- function (base,esponente) { return(base^esponente)}
potenza (1,2)

potenza (2,1)

potenza(esponente=2,base=1)

potenza(esp=2,ba=1)

i <- 1
quantile(r[,i], seq(0,1,0.1))
plot(quantile(r[,i], seq(0, 1, 0.01)), seq(0, 1, 0.01), type="l",
main=nomi[i], xlab="Return",ylab="Probability")

plot(density(r[,i]), main=paste("Densità stimata dei log-returns di", nomi[i]))



















